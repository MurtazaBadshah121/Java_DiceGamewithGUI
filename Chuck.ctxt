#BlueJ class context
comment0.target=Chuck
comment0.text=\r\n\ This\ is\ the\ Chuck\ class\ where\ we\ define\ the\ instanse\ variables\ and\ perform\r\n\ the\ backend\ tasks\ of\ the\ Chuck\ a\ luck\ game\ GUI.\r\n\r\n\ @author\ (Murtaza\ Badshah)\r\n\ @version\ (10/28/2020)\r\n
comment1.params=
comment1.target=Chuck()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Chuck\r\n
comment10.params=
comment10.target=void\ checkField()
comment10.text=\r\n\ This\ private\ method\ utilizes\ the\ getSumDiceValue\ and\ checks\ if\ its\r\n\ less\ than\ 8\ or\ greater\ than\ 12.\ If\ true\ \r\n
comment11.params=num
comment11.target=void\ checkNumber(int)
comment11.text=\r\n\ This\ private\ method\ takes\ Integer\ num\ and\ checks\ if\ any\ two\ of\ the\ \r\n\ dice\ match\ the\ num\ value\ or\ three\ of\ the\ die\ match\ num\ or\ only\ 1\ die\r\n\ matches\ num\ and\ then\ add\ credits\ to\ the\ balance\ accodingly\ and\ display\r\n\ a\ congratulations\ message.\r\n\r\n\ @param\ \ num\ \ Int\ value\ retrived\ from\ the\ GVdie\ class.\r\n\ @return\ \ \ \ n/a.\ \r\n
comment12.params=
comment12.target=void\ checkAllBets()
comment12.text=\r\n\ This\ private\ method\ checks\ the\ bets\ entered.\r\n\r\n\ \r\n\ @return\ \ \ \ n/a.\ \r\n
comment13.params=amount
comment13.target=void\ addCredits(int)
comment13.text=\r\n\ This\ public\ method\ does\ not\ return\ anything\ but\ it\ adds\ \r\n\ credits\ to\ the\ balance\ variable.\r\n\r\n\ @param\ \ amount\ \ \ integer\ amount\ value\ needed.\r\n\ @return\ \ \ \ n/a.\ \r\n
comment14.params=bet
comment14.target=void\ placeBet(int)
comment14.text=\r\n\ This\ public\ method\ takes\ the\ integer\ variable\ bet\ and\r\n\ checks\ if\ the\ bet\ is\ between\ 0\ and\ 9\ and\ then\ sets\ the\ specific\r\n\ index\ to\ true.\r\n\r\n\ @param\ \ bet\ \ integer\ value\ bet..\r\n\ @return\ \ \ \ n/a.\ \r\n
comment15.params=bet
comment15.target=void\ cancelBet(int)
comment15.text=\r\n\ This\ public\ method\ takes\ integer\ bet\ and\ cancels\ any\ previous\r\n\ bets\ placed.\r\n\r\n\ @param\ \ bet\ \ integer\ variable\ bet.\r\n\ @return\ \ \ \ n/a.\ \r\n
comment16.params=
comment16.target=void\ clearAllBets()
comment16.text=\r\n\ This\ public\ method\ takes\ Integer\ num\ and\ checks\ if\ any\ two\ of\ the\ \r\n\ dice\ match\ the\ num\ value\ or\ three\ of\ the\ die\ match\ num\ or\ only\ 1\ die\r\n\ matches\ num\ and\ then\ add\ credits\ to\ the\ balance\ accodingly\ and\ display\r\n\ a\ congratulations\ message.\r\n\r\n\ @param\ \ num\ \ Int\ value\ retrived\ from\ the\ GVdie\ class.\r\n\ @return\ \ \ \ n/a.\ \r\n
comment17.params=
comment17.target=void\ roll()
comment17.text=\r\n\ This\ public\ method\ rolls\ the\ die\ array\ objects\ and\ then\ invokes\r\n\ the\ checkallbets\ methods\ if\ its\ true\ then\ rolls\ the\ die\ if\ not.\r\n\ then\ it\ outputs\ the\ message\ and\ sets\ the\ roll\ to\ blank.\r\n\r\n\ \r\n\ @return\ \ \ \ n/a.\ \r\n
comment18.params=
comment18.target=void\ reset()
comment18.text=\r\n\ This\ public\ resets\ the\ GVdie\ elements\ to\ blank\ and\ sets\ the\r\n\ defaults\ to\ all\ variables.\r\n
comment19.params=
comment19.target=boolean\ enoughCredits()
comment19.text=\r\n\ This\ public\ method\ checks\ if\ the\ user\ has\ enough\ credits.\r\n\r\n\ \r\n\ @return\ \ \ \ true\ or\ false.\ \r\n
comment2.params=
comment2.target=java.lang.String\ getMessage()
comment2.text=\r\n\ This\ method\ returns\ the\ message.\r\n\r\n\ \r\n\ @return\ \ \ \ returns\ the\ message\ text.\r\n
comment20.params=
comment20.target=java.lang.String\ diceToString()
comment20.text=\r\n\ This\ public\ method\ tests\ the\ software\ and\ prints\ out\ the\ dice\r\n\ values.\r\n\r\n\ \r\n\ @return\ \ \ \ n/a.\ \r\n
comment21.params=values
comment21.target=void\ testRoll(int[])
comment21.text=\r\n\ This\ public\ method\ tests\ the\ roll\ based\ on\ the\ values\ entered\r\n\ in\ an\ array.\r\n\r\n\ @param\ \ array\ \ of\ values.\r\n\ @return\ \ \ \ n/a.\ \r\n
comment3.params=
comment3.target=int\ getCredits()
comment3.text=\r\n\ This\ method\ returns\ the\ balance\ amount.\r\n\r\n\ @return\ \ \ \ return\ the\ current\ balance\ amount.\r\n
comment4.params=
comment4.target=GVdie[]\ getDice()
comment4.text=\r\n\ This\ method\ returns\ the\ array\ of\ the\ GVdie\r\n\r\n\ @return\ \ \ \ Return\ the\ array\ of\ the\ GVdie\ objects\r\n
comment5.params=
comment5.target=int\ getSumDiceValues()
comment5.text=\r\n\ This\ private\ method\ takes\ the\ values\ from\ the\ GVdie\ object\ and\ returns\r\n\ the\ sum\ value.\r\n\r\n\ \r\n\ @return\ \ \ \ The\ sum\ of\ the\ of\ the\ dice\ values\r\n
comment6.params=num
comment6.target=boolean\ isDoubles(int)
comment6.text=\r\n\ This\ private\ method\ takes\ Integer\ num\ and\ checks\ if\ any\ two\ of\ the\ \r\n\ dice\ match\ the\ num\ value.\r\n\r\n\ @param\ \ num\ \ Int\ value\ retrived\ from\ the\ GVdie\ class.\r\n\ @return\ \ \ \ True\ or\ False\ if\ two\ die\ match\ each\ other.\ \r\n
comment7.params=
comment7.target=boolean\ isTriplets()
comment7.text=\r\n\ This\ private\ method\ checks\ if\ each\ of\ the\ element\ values\ match\ each\r\n\ other\ and\ returns\ true\ else\ false.\r\n\r\n\r\n\ @return\ \ \ \ True\ or\ False\ if\ all\ cases\ match\r\n
comment8.params=
comment8.target=void\ checkLarge()
comment8.text=\r\n\ This\ private\ method\ utilizes\ the\ getSumDiceValue\ and\ isTriplets\r\n\ methods\ to\ check\ if\ the\ sum\ value\ is\ greater\ than\ 10\ and\ isTriplets\ is\r\n\ false.\ Then\ we\ will\ add\ two\ credits\ and\ update\ the\ message\ string\ that\r\n\ the\ user\ has\ won.\r\n
comment9.params=
comment9.target=void\ checkSmall()
comment9.text=\r\n\ This\ private\ method\ utilizes\ the\ getSumDiceValue\ and\ isTriplets\r\n\ methods\ to\ check\ if\ the\ sum\ value\ is\ less\ than\ 11\ and\ isTriplets\ is\r\n\ false.\ Then\ we\ will\ add\ two\ credits\ and\ update\ the\ message\ string\ that\r\n\ the\ user\ has\ won.\r\n
numComments=22
